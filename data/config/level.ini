; Ripples - config file
; Should be used with orx v.1.8+

[O-Level]
Group           = Level
Pivot           = top left
ID              = Level
TrackList       = T-StoreID
ShaderList      = S-Level
VictoryThreshold= 50

[S-Level]
Code            = "
void main()
{
    vec4 color = vec4(0.0, 0.0, 0.0, 0.0);
    bool valid = true;
    vec2 pos = gl_TexCoord[0].xy;

    vec2 dist = vec2(0.5) - pos;
    dist.y *= 1080.0 / 1920.0;

    if(length(dist) < Radius)
    {
        vec4 lvl = texture2D(Level, gl_TexCoord[0].xy);
        vec2 uv = mod(pos * vec2(1920.0/40.0, 1080./40.0), 1.0);

        float values[4] = float[4](lvl.r, lvl.g, lvl.b, lvl.a);
        bool mask[4] = bool[4](false, false, false, false);
        bool pattern[4] = bool[4](false, false, false, false);
        vec4 light = texture2D(Lighting, gl_TexCoord[0].xy);
        float lights[4] = float[4](light.r, light.g, light.b, light.a);

        for(int i = 0; i < 4; i++)
        {
            if(values[i] > 0.5)
            {
                vec4 temp = texture2D(PatternList[i], uv);
                color += temp;
                if(temp.a != 0.0)
                {
                    mask[i] = true;
                }
                pattern[i] = true;
            }
        }

        bool test = false;

        if(color.a != 0.0)
        {
            test = true;
        }

        if(test)
        {
            bool lit = false;
            bool bad = false;
            for(int i = 0; i < 4; i++)
            {
                if(lights[i] > 0.5)
                {
                    if(!pattern[i])
                    {
                        vec2 dist = SourceList[i].xy - pos;
                        dist.y *= 1080.0 / 1920.0;
                        float r = length(dist);
                        color.rgb = (1.0 + Base + (1.0 - Base) * sin((Frequency * r) - (Speed * Time))) * vec3(1.0, 0.0, 0.0);
                        valid = false;
                        bad = true;
                    }
                    else
                    {
                        if(mask[i] && !bad)
                        {
                            vec2 dist = SourceList[i].xy - pos;
                            dist.y *= 1080.0 / 1920.0;
                            float r = length(dist);
                            color.rgb = (1.0 + Base + (1.0 - Base) * sin((Frequency * r) - (Speed * Time))) * vec3(1.0/255.0) * SourceColorList[i];
                            valid = true;
                        }
                    }
                    lit = true;
                }
            }

            if(!lit)
            {
                valid = false;
            }
        }
        else
        {
            color = vec4(0.16, 0.16, 0.16, 1.0);
        }
    }

    gl_FragData[0] = color;
    if(valid)
    {
        gl_FragData[1] = vec4(0.0);
    }
    else
    {
        gl_FragData[1] = vec4(1.0);
    }
}
"
ParamList   = Level # Lighting # PatternList # SourceList # SourceColorList # Radius # Time # Phase # Base # Frequency # Speed
Radius      = 0.26
PatternList = i.png # you.png # us.png # good.png
SourceList  = (0, 0, 0) # (0, 0, 0) # (0, 0, 0) # (0, 0, 0)
SourceColorList = (0, 0, 0) # (0, 0, 0) # (0, 0, 0) # (0, 0, 0)
Time        = 0
Phase       = 5
Base        = 0.2
Frequency   = 100
Speed       = 4
Lighting    = LightingTexture


[Pattern]
Group       = Dummy

[Pattern-i@Pattern]
Texture     = i.png
Color       = (30, 255, 0)
Sound       = O-iSound

[Pattern-you@Pattern]
Texture     = you.png
Color       = (232, 96, 202)
Sound       = O-youSound

[Pattern-us@Pattern]
Texture     = us.png
Color       = (137, 97, 227)
Sound       = O-usSound

[Pattern-other@Pattern]
Texture     = other.png
Color       = (97, 189, 227)
Sound       = O-otherSound

[Pattern-good@Pattern]
Texture     = good.png
Color       = (31, 239, 183)
Sound       = O-goodSound

[Pattern-bad@Pattern]
Texture     = bad.png
Color       = (255, 172, 105)
Sound       = O-badSound

@00_Tutorial_1.ini@
@01_Tutorial_2.ini@
@02_Tutorial_3.ini@
@03_Tutorial_4.ini@
